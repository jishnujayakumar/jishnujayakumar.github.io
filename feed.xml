<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.4.1">Jekyll</generator><link href="/feed.xml" rel="self" type="application/atom+xml"/><link href="/" rel="alternate" type="text/html" hreflang="en"/><updated>2025-09-17T00:04:11+00:00</updated><id>/feed.xml</id><title type="html">blank</title><subtitle>A simple, whitespace theme for academics. Based on [*folio](https://github.com/bogoli/-folio) design. </subtitle><entry><title type="html">Save raw depth as JPEG or PNG?</title><link href="/blog/2024/saving-depth-as-jpg-vs-png/" rel="alternate" type="text/html" title="Save raw depth as JPEG or PNG?"/><published>2024-12-19T00:00:00+00:00</published><updated>2024-12-19T00:00:00+00:00</updated><id>/blog/2024/saving-depth-as-jpg-vs-png</id><content type="html" xml:base="/blog/2024/saving-depth-as-jpg-vs-png/"><![CDATA[<p><img src="../../../assets/blog/jpg-vs-png/jpg-vs-png-depth-jumbotron.gif" alt="Docker for academic research" width="100%" height="auto"/></p> <center>3D point cloud containing scenes created using <strong style="color:red">JPEG</strong> and <strong style="color:lightgreen">PNG</strong> Depth images.</center> <p><br/></p> <hr/> <h2 id="index">Index</h2> <ul> <li><a href="#index">Index</a></li> <li><a href="#the-spark-a-quest-for-compression">The Spark: A Quest for Compression</a></li> <li><a href="#the-twist-shaky-3d-scenes">The Twist: Shaky 3D Scenes</a></li> <li><a href="#rgb--jpeg-depth-scene-point-cloud">RGB + JPEG Depth Scene Point Cloud</a></li> <li><a href="#the-discovery-switching-to-png">The Discovery: Switching to PNG</a></li> <li><a href="#the-evidence-videos-and-point-clouds">The Evidence: Videos and Point Clouds</a></li> <li><a href="#lessons-learned-why-png-wins">Lessons Learned: Why PNG Wins</a></li> <li><a href="#closing-thoughts">Closing Thoughts</a></li> </ul> <hr/> <h2 id="the-spark-a-quest-for-compression">The Spark: A Quest for Compression</h2> <p>In my recent robotics project, data collection was progressing at full steam. The challenge? Managing the ever-growing volume of RGB and depth images. üìà Compression seemed like the perfect solution. For RGB images, JPEG was a natural choice‚Äîefficient, widely used, and capable of reducing file sizes significantly. But then came the question: Could JPEG work for depth images too? üíæ</p> <p>Eager to streamline the process, I stored both RGB and depth images in JPEG format. It felt like a practical and straightforward decision at the time.</p> <hr/> <h2 id="the-twist-shaky-3d-scenes">The Twist: Shaky 3D Scenes</h2> <p>Things took an unexpected turn when I moved to the next phase: generating 3D scene point clouds from the depth data. Point clouds are critical for extracting insights and performing spatial analysis. üß† Using my JPEG-based dataset, I plotted the point clouds‚Äîand that‚Äôs when the problems began. The 3D scenes were noisy, unstable, and lacked the precision I needed. ‚ùå</p> <p>Digging deeper, I realized that JPEG‚Äôs 8-bit storage capacity was the issue. Depth data, which demands high precision, was being constrained by the format‚Äôs limitations. Crucial details were lost, resulting in inaccuracies in the visualized 3D scenes.</p> <p><img src="../../../assets/blog/jpg-vs-png/rgbd-jpeg-3d.gif" width="100%"/></p> <center>RGB + JPEG Depth Scene Point Cloud</center> <hr/> <h2 id="the-discovery-switching-to-png">The Discovery: Switching to PNG</h2> <p>To address the issue, I switched to storing depth images in PNG format. Unlike JPEG, PNG supports 16-bit storage, which offers a much higher range for representing depth values. With this new setup, I recollected data and generated fresh point clouds. üé®</p> <p>The results were striking. The PNG-based depth data produced clear, accurate, and stable 3D scenes. The increased bit depth preserved the subtle variations in depth values, enabling precise visualization and analysis. üåÑ</p> <p>What seemed like a minor choice of file format turned out to have a major impact on the quality and usability of the data.</p> <p><img src="../../../assets/blog/jpg-vs-png/rgbd-png-3d.gif" width="100%"/></p> <center>RGB + PNG Depth Scene Point Cloud</center> <hr/> <h2 id="the-evidence-videos-and-point-clouds">The Evidence: Videos and Point Clouds</h2> <p>To highlight the differences, I created visual comparisons:</p> <video class="demo-video" width="100%" height="auto" controls=""> <source src="../../../assets/blog/jpg-vs-png/output_jpg.mp4" type="video/mp4"/> Your browser does not support the video tag. </video> <center>RGB + JPEG Depth</center> <p><br/></p> <video class="demo-video" width="100%" height="auto" controls=""> <source src="../../../assets/blog/jpg-vs-png/output_png.mp4" type="video/mp4"/> Your browser does not support the video tag. </video> <center>RGB + PNG Depth</center> <p><br/></p> <video class="demo-video" width="100%" height="auto" controls=""> <source src="../../../assets/blog/jpg-vs-png/rgbd-jpg-png.mp4" type="video/mp4"/> Your browser does not support the video tag. </video> <center>3D scene point clouds created using depth data from both JPEG and PNG are shown in a single 3D frame.</center> <p><br/></p> <p>It is evident that JPEG depth loses some depth information, while PNG is better at capturing a wider range of depth values. These visualizations clearly demonstrate why PNG is the superior choice for depth data.</p> <hr/> <h2 id="lessons-learned-why-png-wins">Lessons Learned: Why PNG Wins</h2> <p>The key factor is <strong>bit depth</strong>. JPEG‚Äôs 8-bit limitation truncates depth information, leading to significant data loss. PNG‚Äôs 16-bit capacity retains the full range of depth values, preserving the integrity of the data.</p> <p>While JPEG remains excellent for RGB images, the precision needs of depth data make PNG the better option. The slightly larger file size is a small trade-off for the significant gains in accuracy and reliability. üìÅ</p> <p>Here‚Äôs what I did to subscribe to depth data from the ROS topic on the Fetch robot.</p> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">if</span> <span class="n">depth</span><span class="p">.</span><span class="n">encoding</span> <span class="o">==</span> <span class="sh">"</span><span class="s">32FC1</span><span class="sh">"</span><span class="p">:</span>
    <span class="c1"># Convert depth message to OpenCV format
</span>    <span class="n">depth_cv</span> <span class="o">=</span> <span class="n">self</span><span class="p">.</span><span class="n">cv_bridge</span><span class="p">.</span><span class="nf">imgmsg_to_cv2</span><span class="p">(</span><span class="n">depth</span><span class="p">)</span>

    <span class="c1"># Replace NaN values with 0 and convert from meters to millimeters
</span>    <span class="n">depth_cv</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="nf">array</span><span class="p">(</span><span class="n">depth_cv</span><span class="p">)</span>
    <span class="n">depth_cv</span><span class="p">[</span><span class="n">np</span><span class="p">.</span><span class="nf">isnan</span><span class="p">(</span><span class="n">depth_cv</span><span class="p">)]</span> <span class="o">=</span> <span class="mi">0</span>
    <span class="n">depth_cv</span> <span class="o">=</span> <span class="n">depth_cv</span> <span class="o">*</span> <span class="mi">1000</span>

    <span class="c1"># Convert to uint16 for consistency
</span>    <span class="n">depth_cv</span> <span class="o">=</span> <span class="n">depth_cv</span><span class="p">.</span><span class="nf">astype</span><span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="n">uint16</span><span class="p">)</span>

    <span class="c1"># TODO: Save as png
</span></code></pre></div></div> <hr/> <h2 id="closing-thoughts">Closing Thoughts</h2> <p>In robotics, even seemingly minor decisions‚Äîlike choosing a file format‚Äîcan have far-reaching implications.</p> <p>Next time you‚Äôre deciding between JPEG and PNG for depth images, remember: precision matters. Choose wisely to let your data shine‚Äîclearly and accurately. ‚úÖ</p> <p>If you‚Äôve worked with other formats for depth data, I‚Äôd love to hear your insights. ü§ù‚ú®</p> <hr/> <p>Feel free to reach out in case you have a query. You are always welcome. You can find me on X at <a href="https://x.com/jis_padalunkal" target="_blank">@jis_padalunkal</a>.</p> <script>document.getElementByClass("demo-video").playbackRate=1.5;</script>]]></content><author><name></name></author><category term="research"/><category term="robotics"/><category term="phd-life"/><category term="case-study"/><category term="depth"/><summary type="html"><![CDATA[A case study of saving raw depth from fetch robot camera as JPEG and PNG]]></summary></entry><entry><title type="html">Setting Up a Wi-Fi Hotspot on Boot for Your Robot</title><link href="/blog/2024/setting-up-a-wifi-adapter-on-irvl-fetch/" rel="alternate" type="text/html" title="Setting Up a Wi-Fi Hotspot on Boot for Your Robot"/><published>2024-12-16T00:00:00+00:00</published><updated>2024-12-16T00:00:00+00:00</updated><id>/blog/2024/setting-up-a-wifi-adapter-on-irvl-fetch</id><content type="html" xml:base="/blog/2024/setting-up-a-wifi-adapter-on-irvl-fetch/"><![CDATA[<p><img src="/assets/blog/irvl-fetch-wifi-adapter-diy/alpha_adapter/robot-human-hololens.png" alt="robot-human-hololens" width="100%"/></p> <center>At the <a href="https://labs.utdallas.edu/irvl/" target="_blank">Intelligent Robotics and Vision Lab</a>, I am trying to establish a connection between the <span style="font-weight: bold">HoloLens 2</span> device mounted on my head and the <span style="font-weight: bold">Fetch</span> robot.</center> <p><br/></p> <hr/> <h2 id="index">Index</h2> <ul> <li><a href="#index">Index</a> <ul> <li><a href="#why-create-a-wi-fi-hotspot-on-boot">Why Create a Wi-Fi Hotspot on Boot?</a></li> <li><a href="#prerequisites">Prerequisites</a></li> <li><a href="#step-1-create-the-hotspot-script">Step 1: Create the Hotspot Script</a></li> <li><a href="#step-2-create-a-credentials-file">Step 2: Create a Credentials File</a></li> <li><a href="#step-3-create-a-systemd-service">Step 3: Create a Systemd Service</a></li> <li><a href="#step-4-verify-hotspot-on-boot">Step 4: Verify Hotspot on Boot</a></li> <li><a href="#step-5-optional--add-status-check-to-bashrc">Step 5: Optional ‚Äì Add Status Check to ~/.bashrc</a></li> <li><a href="#troubleshooting">Troubleshooting</a></li> </ul> </li> </ul> <hr/> <h3 id="why-create-a-wi-fi-hotspot-on-boot">Why Create a Wi-Fi Hotspot on Boot?</h3> <p>In robotics, self-hosted networks can be critical for:</p> <ul> <li>Connecting remote controllers or operator devices.</li> <li>Transmitting real-time data streams (e.g., images, depth, or control commands).</li> <li>Enabling peer-to-peer communication in isolated environments.</li> </ul> <p>Let‚Äôs configure a Wi-Fi hotspot to start automatically whenever your robot boots up. üì°ü§ñ‚ú®</p> <hr/> <h3 id="prerequisites">Prerequisites</h3> <ul> <li>A Linux-based system (tested on Ubuntu). Our Fetch robot has Ubuntu 18.04 installed.</li> <li>NetworkManager installed (commonly pre-installed on Ubuntu).</li> <li>A compatible Wi-Fi adapter connected to the robot.</li> <li>Root access to the system.</li> </ul> <p>üìã Ensure these are set up before proceeding!</p> <video class="demo-video" width="100%" height="50%" controls=""> <source src="../../../assets/blog/irvl-fetch-wifi-adapter-diy/alpha_adapter/robot-with-alpha-adapter.mp4" type="video/mp4"/> Your browser does not support the video tag. </video> <center><a href="https://www.amazon.com/Network-AWUS036ACM-Long-Range-Wide-Coverage-High-Sensitivity/dp/B08BJS8FXD/ref=asc_df_B08BJS8FXD?mcid=bda890b6f4353c769755c6838472b8c9&amp;tag=hyprod-20&amp;linkCode=df0&amp;hvadid=693415510935&amp;hvpos=&amp;hvnetw=g&amp;hvrand=11530231208179162355&amp;hvpone=&amp;hvptwo=&amp;hvqmt=&amp;hvdev=c&amp;hvdvcmdl=&amp;hvlocint=&amp;hvlocphy=9026839&amp;hvtargid=pla-996386731604&amp;psc=1" target="_blank">Alpha Dual Antenna Wifi Adapter</a> connected on top of the head of our Fetch robot.</center> <p><br/></p> <hr/> <h3 id="step-1-create-the-hotspot-script">Step 1: Create the Hotspot Script</h3> <p>Let‚Äôs have a directory related to this setting:</p> <div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># try setting absolute path</span>
<span class="nb">export </span><span class="nv">WIFI_ADAP_ROOT_DIR</span><span class="o">=</span>/home/fetch/wifi-adapter-settings
<span class="nb">mkdir</span> <span class="nt">-p</span> <span class="nv">$WIFI_ADAP_ROOT_DIR</span>
<span class="nb">cd</span> <span class="nv">$WIFI_ADAP_ROOT_DIR</span>
</code></pre></div></div> <p>We‚Äôll use a Bash script to configure and start the hotspot. Create the file <code class="language-plaintext highlighter-rouge">start_hotspot.sh</code>:</p> <div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c">#!/bin/bash</span>

<span class="c"># Disable the firewall</span>
ufw disable

<span class="nb">echo</span> <span class="s2">"Firewall stopped and disabled on system startup"</span>

<span class="c"># Wait for 2 seconds</span>
<span class="nb">sleep </span>2

<span class="c"># Read credentials and create hotspot</span>
<span class="nv">CREDS_FILE</span><span class="o">=</span><span class="nv">$WIFI_ADAP_ROOT_DIR</span>/hotspot_creds.cfg
<span class="nb">source</span> <span class="nv">$CREDS_FILE</span>

<span class="c"># Create the hotspot</span>
nmcli device wifi hotspot ifname alpha_wifi_adap ssid <span class="s2">"</span><span class="nv">$SSID</span><span class="s2">"</span> password <span class="s2">"</span><span class="nv">$PASSWORD</span><span class="s2">"</span> band a channel 149
</code></pre></div></div> <p>Explanation of the Script:</p> <ul> <li><strong>Disable the firewall:</strong> Ensures no network traffic is blocked (adjust this for secure setups).</li> <li><strong>Wait for 2 seconds:</strong> Adds a buffer to ensure system services are up.</li> <li><strong>Source credentials:</strong> Reads the hotspot name (SSID) and password from hotspot_creds.cfg.</li> <li><strong>Set up the hotspot:</strong> Uses nmcli to configure and start the hotspot.</li> </ul> <p>Save this script to <code class="language-plaintext highlighter-rouge">$WIFI_ADAP_ROOT_DIR/start_hotspot.sh</code> and make it executable:</p> <div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">chmod</span> +x <span class="nv">$WIFI_ADAP_ROOT_DIR</span>/start_hotspot.sh
</code></pre></div></div> <hr/> <h3 id="step-2-create-a-credentials-file">Step 2: Create a Credentials File</h3> <p>Store your hotspot credentials in a secure configuration file:</p> <div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>nano <span class="nv">$WIFI_ADAP_ROOT_DIR</span>/hotspot_creds.cfg
</code></pre></div></div> <p>Add the following content:</p> <div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">SSID</span><span class="o">=</span><span class="s2">"your_hotspot_name"</span>
<span class="nv">PASSWORD</span><span class="o">=</span><span class="s2">"your_secure_password"</span>
</code></pre></div></div> <p>Make sure the credentials file is readable only by the owner:</p> <div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">chmod </span>600 <span class="nv">$WIFI_ADAP_ROOT_DIR</span>/hotspot_creds.cfg
</code></pre></div></div> <p>üõ°Ô∏è This keeps your credentials secure!</p> <hr/> <h3 id="step-3-create-a-systemd-service">Step 3: Create a Systemd Service</h3> <p>To ensure the hotspot script runs on every boot, create a systemd service file:</p> <div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>nano /etc/systemd/system/start_hotspot.service
</code></pre></div></div> <p>Add the following content:</p> <div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">[</span>Unit]
<span class="nv">Description</span><span class="o">=</span>Start Hotspot Script on Boot
<span class="nv">After</span><span class="o">=</span>network.target

<span class="o">[</span>Service]
<span class="nv">Type</span><span class="o">=</span>oneshot
<span class="nv">ExecStart</span><span class="o">=</span>/bin/bash /home/fetch/wifi-adapter-settings/start_hotspot.sh
<span class="nv">RemainAfterExit</span><span class="o">=</span><span class="nb">yes</span>

<span class="o">[</span>Install]
<span class="nv">WantedBy</span><span class="o">=</span>multi-user.target
</code></pre></div></div> <p>Explanation of the Service File:</p> <ul> <li><strong>After=network.target:</strong> Ensures the service starts after network services are ready.</li> <li><strong>ExecStart:</strong> Runs the hotspot script. <em>NOTE:</em> Keep the absolute path of the script.</li> <li><strong>RemainAfterExit:</strong> Keeps the service active after execution.</li> </ul> <p>Enable the service:</p> <div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>systemctl <span class="nb">enable </span>start_hotspot.service
</code></pre></div></div> <p>Test the service by starting it manually:</p> <div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>systemctl start start_hotspot.service
<span class="nb">sudo </span>systemctl status start_hotspot.service
</code></pre></div></div> <p>If successful, the hotspot should start without errors. üöÄ‚ú®</p> <hr/> <h3 id="step-4-verify-hotspot-on-boot">Step 4: Verify Hotspot on Boot</h3> <p>To confirm the hotspot starts correctly after reboot:</p> <ul> <li>Reboot your system: <div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>reboot
</code></pre></div> </div> </li> <li>Once the system boots up, check the hotspot status: <div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>systemctl status start_hotspot.service
</code></pre></div> </div> </li> <li>You can also use the nmcli command to verify: <div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>nmcli dev wifi
</code></pre></div> </div> </li> </ul> <p>‚úÖ This ensures everything is working smoothly! üåü</p> <hr/> <h3 id="step-5-optional--add-status-check-to-bashrc">Step 5: Optional ‚Äì Add Status Check to ~/.bashrc</h3> <p>For convenience, add a status check to your <code class="language-plaintext highlighter-rouge">~/.bashrc</code> file. This will display the hotspot‚Äôs status whenever you open a terminal:</p> <div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># Check Hotspot Status, use absolute path</span>
<span class="nv">CREDS_FILE</span><span class="o">=</span>/home/fetch/wifi-adapter-settings/hotspot_creds.cfg
<span class="k">if</span> <span class="o">[</span> <span class="nt">-f</span> <span class="nv">$CREDS_FILE</span> <span class="o">]</span><span class="p">;</span> <span class="k">then
    </span><span class="nb">source</span> <span class="nv">$CREDS_FILE</span>
    <span class="k">if </span>nmcli dev wifi | <span class="nb">grep</span> <span class="nt">-q</span> <span class="s2">"</span><span class="nv">$SSID</span><span class="s2">"</span><span class="p">;</span> <span class="k">then
        </span><span class="nv">ip_address</span><span class="o">=</span><span class="si">$(</span>ip addr show alpha_wifi_adap | <span class="nb">grep</span> <span class="s1">'inet '</span> | <span class="nb">awk</span> <span class="s1">'{print $2}'</span> | <span class="nb">cut</span> <span class="nt">-d</span>/ <span class="nt">-f1</span><span class="si">)</span>
        <span class="nb">echo</span> <span class="s2">"Hotspot '</span><span class="nv">$SSID</span><span class="s2">' is LIVE."</span>
        <span class="nb">echo</span> <span class="nt">-e</span> <span class="s2">"- IP: </span><span class="nv">$ip_address</span><span class="s2">
- Password: </span><span class="nv">$PASSWORD</span><span class="s2">"</span>
    <span class="k">else
        </span><span class="nb">echo</span> <span class="s2">"Hotspot '</span><span class="nv">$SSID</span><span class="s2">' is NOT ACTIVE."</span>
    <span class="k">fi
else
    </span><span class="nb">echo</span> <span class="s2">"Hotspot credentials file not found."</span>
<span class="k">fi</span>
</code></pre></div></div> <center> <div style="display: flex; align-items: center;"> <img src="/assets/blog/irvl-fetch-wifi-adapter-diy/alpha_adapter/step-5-out.png" alt="Step 5 Output" style="width: 45%; margin-right: 20px;"/> <video class="demo-video" width="58%" height="auto" controls=""> <source src="../../../assets/blog/irvl-fetch-wifi-adapter-diy/alpha_adapter/connect-hololens2-to-robot-hotspot.mp4" type="video/mp4"/> Your browser does not support the video tag. </video> </div> </center> <center><b>Left:</b> Hotspot status after system boot.<br/><b>Right:</b> A demo showcasing the HoloLens connecting to the created hotspot.</center> <p><br/></p> <hr/> <h3 id="troubleshooting">Troubleshooting</h3> <ul> <li><strong>Error: Not authorized to control network:</strong> <ul> <li>Ensure the script is executed with root privileges.</li> </ul> </li> <li><strong>Error: either ‚Äòdev‚Äô is duplicate or ‚Äòiwlist‚Äô is garbage:</strong> <ul> <li>Verify the hotspot interface name (alpha_wifi_adap).</li> <li>Double-check the hotspot script syntax.</li> </ul> </li> <li><strong>Hotspot not starting on boot:</strong> <ul> <li>Check the service logs: <div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>journalctl <span class="nt">-u</span> start_hotspot.service
</code></pre></div> </div> </li> </ul> </li> </ul> <p>üõ†Ô∏è Be ready to debug as needed! üß©</p> <hr/> <p>Feel free to reach out in case you have a query. You are always welcome. You can find me on X at <a href="https://x.com/jis_padalunkal" target="_blank">@jis_padalunkal</a>.</p> <script>document.getElementByClass("demo-video").playbackRate=1.5;</script>]]></content><author><name></name></author><category term="research"/><category term="robotics"/><category term="phd-life"/><category term="sys_setup"/><category term="robot"/><category term="wifi"/><category term="hotspot"/><category term="network"/><category term="system"/><category term="setup"/><summary type="html"><![CDATA[Robots operating in environments without reliable network connectivity often require a self-hosted Wi-Fi hotspot for seamless operation. This blog post will guide you through creating a Wi-Fi hotspot on boot using a Linux-based system, ensuring uninterrupted communication with your robot.]]></summary></entry><entry><title type="html">Using Docker for Academic Research</title><link href="/blog/2022/using-docker-for-academic-research/" rel="alternate" type="text/html" title="Using Docker for Academic Research"/><published>2022-07-06T23:54:24+00:00</published><updated>2022-07-06T23:54:24+00:00</updated><id>/blog/2022/using-docker-for-academic-research</id><content type="html" xml:base="/blog/2022/using-docker-for-academic-research/"><![CDATA[<p><img src="../../../assets/blog/docker-for-research.svg" alt="Docker for academic research" width="100%" height="150px"/></p> <center>Image made using logos available <a href="https://www.docker.com/company/newsroom/media-resources/" target="_blank">here</a>.</center> <p><br/></p> <hr/> <ul> <li><strong>Note</strong>: Reading this post needs familiarity with <a href="https://www.docker.com/" target="_blank">Docker</a>. If you are new to the Docker world, I suggest looking <a href="https://www.youtube.com/watch?v=iqqDU2crIEQ" target="_blank">here</a>. This post is more catered towards the steps required for creating and pushing images to <a href="https://hub.docker.com/">DockerHub</a>.*</li> </ul> <p>Docker is a well-known tool. Although it is used prominently in the industry, there is a usage gap when talking about academic research. The main advantage of using Docker is that it allows the creation of images that ease the process of reproducibility. There have been various attempts to encourage reproducibility.</p> <ul> <li><a href="https://naacl2022-reproducibility-track.github.io/tutorial/" target="_blank">NAACL‚Äô22 Reproducibility Track</a></li> <li><a href="http://rescience.githb.io/" target="_blank">RESCIENCE C</a></li> </ul> <p>It is always a good idea to do experiments inside the Docker container so that the image of the container can be shared at the end. This would give the end users the same environment for conducting experiments and reduce a lot of environment setup time.</p> <p>Use the following steps to create and publish a Docker image for your project:</p> <p><strong>Step.1.a</strong>: Check for the image of interest locally.</p> <figure class="highlight"><pre><code class="language-bash" data-lang="bash">docker images</code></pre></figure> <p><strong>Step.1.b</strong>: If none, find an image of choice from <a href="https://hub.docker.com/">DockerHub</a> or any other source.</p> <p><strong>Step.2</strong>: Run the Docker image as a container.</p> <figure class="highlight"><pre><code class="language-bash" data-lang="bash">docker run <span class="nt">--gpus</span> all <span class="nt">-id</span> <span class="nt">--rm</span> <span class="se">\</span>
<span class="nt">-v</span> &lt;cloned-repo&gt;:/workspace <span class="se">\</span>
<span class="nt">--name</span> &lt;container-name&gt; &lt;docker-image&gt;</code></pre></figure> <p><strong>Step.3</strong>: Get inside the container.</p> <figure class="highlight"><pre><code class="language-bash" data-lang="bash">docker <span class="nb">exec</span> <span class="nt">-it</span> &lt;container-name&gt; /bin/bash <span class="c"># for bash shell</span></code></pre></figure> <p><strong>Step.4</strong>: Do the necessary changes, i.e., copy files, install packages, etc.</p> <p><strong>Step.5</strong>: Commit the changes.</p> <figure class="highlight"><pre><code class="language-bash" data-lang="bash">docker commit <span class="se">\</span>
<span class="nt">--author</span> &lt;author-email&gt; <span class="se">\</span>
<span class="nt">--message</span> &lt;commit-message&gt; <span class="se">\ </span>
&lt;container-name&gt;</code></pre></figure> <p><strong>Step.6</strong>: Check for the IMAGE-ID.</p> <figure class="highlight"><pre><code class="language-bash" data-lang="bash">docker ps <span class="c"># get IMAGE-ID</span></code></pre></figure> <p><strong>Step.7</strong>: Tag the IMAGE-ID with the local-name.</p> <figure class="highlight"><pre><code class="language-bash" data-lang="bash">docker tag &lt;IMAGE-ID&gt; &lt;local-name&gt;</code></pre></figure> <p><strong>Step.8</strong>: Login using <a href="https://hub.docker.com/">DockerHub</a> username and password.</p> <figure class="highlight"><pre><code class="language-bash" data-lang="bash">docker login <span class="nt">-u</span> &lt;username&gt;
<span class="c"># enter password on prompt</span></code></pre></figure> <p><strong>Step.9</strong>: Create a repository on <a href="https://hub.docker.com/">DockerHub</a> before proceeding, i.e. <code class="language-plaintext highlighter-rouge">&lt;username&gt;/&lt;repo&gt;</code>.</p> <p><strong>Step.10</strong>: Tag IMAGE-ID with <a href="https://hub.docker.com/">DockerHub</a> <code class="language-plaintext highlighter-rouge">&lt;username&gt;/&lt;repo&gt;</code>.</p> <figure class="highlight"><pre><code class="language-bash" data-lang="bash">docker tag &lt;IMAGE-ID&gt; &lt;username&gt;/&lt;repo&gt;:&lt;tag&gt;</code></pre></figure> <p><strong>Step.11</strong>: Push the image to <a href="https://hub.docker.com/">DockerHub</a>.</p> <figure class="highlight"><pre><code class="language-bash" data-lang="bash">docker push &lt;username&gt;/&lt;repo&gt;</code></pre></figure> <p><br/><br/> Feel free to reach out in case you have a query. You are always welcome. <br/> Please post it as a tweet to <a href="https://twitter.com/jis_padalunkal" target="_blank">@jis_padalunkal</a>, and I will definitely try to answer it.</p> <figure class="highlight"><pre><code class="language-python" data-lang="python"><span class="nd">@jis_padalunkal</span> <span class="c1">#askjishnu &lt;your question&gt;</span></code></pre></figure>]]></content><author><name></name></author><category term="research"/><category term="Docker"/><category term="research"/><summary type="html"><![CDATA[Need for Docker in academic research]]></summary></entry><entry><title type="html">Displaying External Posts on Your al-folio Blog</title><link href="/blog/2022/displaying-external-posts-on-your-al-folio-blog/" rel="alternate" type="text/html" title="Displaying External Posts on Your al-folio Blog"/><published>2022-04-23T23:20:09+00:00</published><updated>2022-04-23T23:20:09+00:00</updated><id>/blog/2022/displaying-external-posts-on-your-al-folio-blog</id><content type="html" xml:base="/blog/2022/displaying-external-posts-on-your-al-folio-blog/"><![CDATA[]]></content><author><name></name></author></entry></feed>